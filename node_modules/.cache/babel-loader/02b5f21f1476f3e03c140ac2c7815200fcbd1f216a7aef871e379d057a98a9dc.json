{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'ChatView',\n  data() {\n    return {\n      messages: [],\n      newMsg: '',\n      delBtn: false,\n      emptyMsg: true,\n      username: localStorage.getItem('username')\n    };\n  },\n  computed() {\n    localStorage.setItem('username', this.$route.query.username);\n  },\n  methods: {\n    sendMsg() {\n      if (!this.username) {\n        this.username = 'Аноним';\n      }\n      if (this.newMsg !== '') {\n        this.emptyMsg = false;\n        this.message.push({\n          id: new Date().getItem(),\n          text: this.newMsg,\n          user: this.username\n        });\n        this.saveChatRecords();\n        this.newMsg = '';\n        this.delBtn = true;\n      } else {\n        alert('Пожалуйста, введите сообщение');\n      }\n    },\n    delMsg() {\n      this.messages = [];\n      localStorage.removeItem(`messages_${this.username}`, JSON.stringify(this.message));\n      this.emptyMsg = true;\n    },\n    saveChatRecords() {\n      const records = this.messages;\n      console.log(records);\n      localStorage.setItem(`messages_${this.username}`, JSON.stringify(this.records));\n    },\n    loadChatRecords() {\n      const records = JSON.parse(localStorage.getItem(`messages_${this.username}`));\n      if (records) {\n        this.messages = records;\n        this.emptyMsg = false;\n      }\n    }\n  },\n  created() {\n    this.loadChatRecords();\n  }\n};","map":{"version":3,"names":["name","data","messages","newMsg","delBtn","emptyMsg","username","localStorage","getItem","computed","setItem","$route","query","methods","sendMsg","message","push","id","Date","text","user","saveChatRecords","alert","delMsg","removeItem","JSON","stringify","records","console","log","loadChatRecords","parse","created"],"sources":["/Users/vladmelnikov/vscodeProjects/Синергия/6 урок/На вебинаре 1/project/src/components/NewsView.vue"],"sourcesContent":["<template>\n    <div v-if='username'>\n        <div>\n            <h2>Чат</h2>\n            <div v-for='message in messages' :key='message.id'>\n                {{ message.username }}: {{ message.text }}\n            </div>\n            <div v-if='emptyMsg'>Нет сообщений</div>\n        </div>\n        <div>\n            <input v-model='newMsg' placeholder='Введите Ваше сообщение'>\n            <button v-on:click='sendMsg' v-on:keyup.enter='sendMsg'>Отправить</button>\n            <button v-show='delBtn' v-on:click='delMsg'>Удалить переписку</button>\n        </div>\n    </div>\n    <div v-else>\n        Для регистрации перейдите по <router-link :to=\"{name: 'home'}\">ссылке</router-link>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'ChatView',\n    data() {\n        return {\n            messages: [],\n            newMsg: '',\n            delBtn: false,\n            emptyMsg: true,\n            username: localStorage.getItem('username')\n        }\n    },\n    computed() {\n        localStorage.setItem('username', this.$route.query.username)\n    },\n    methods: {\n        sendMsg() {\n            if (!this.username){\n                this.username = 'Аноним'\n            }\n            if (this.newMsg !== ''){\n                this.emptyMsg = false\n                this.message.push(\n                    {\n                        id: new Date().getItem(),\n                        text: this.newMsg,\n                        user: this.username\n                    }\n                )\n                this.saveChatRecords()\n                this.newMsg = ''\n                this.delBtn = true\n            }else {\n                alert('Пожалуйста, введите сообщение')\n            }\n        },\n        delMsg() {\n            this.messages = []\n            localStorage.removeItem(`messages_${this.username}`, JSON.stringify(this.message))\n            this.emptyMsg = true\n        },\n        saveChatRecords() {\n            const records = this.messages\n            console.log(records)\n            localStorage.setItem(`messages_${this.username}`, JSON.stringify(this.records))\n        },\n        loadChatRecords() {\n            const records = JSON.parse(localStorage.getItem(`messages_${this.username}`))\n            if (records){\n                this.messages = records\n                this.emptyMsg = false\n            }\n        }\n    },\n    created() {\n        this.loadChatRecords()\n    }\n}\n</script>"],"mappings":";AAqBA,eAAe;EACXA,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE,KAAK;MACbC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAEC,YAAY,CAACC,OAAO,CAAC,UAAU;IAC7C;EACJ,CAAC;EACDC,QAAQA,CAAA,EAAG;IACPF,YAAY,CAACG,OAAO,CAAC,UAAU,EAAE,IAAI,CAACC,MAAM,CAACC,KAAK,CAACN,QAAQ;EAC/D,CAAC;EACDO,OAAO,EAAE;IACLC,OAAOA,CAAA,EAAG;MACN,IAAI,CAAC,IAAI,CAACR,QAAQ,EAAC;QACf,IAAI,CAACA,QAAO,GAAI,QAAO;MAC3B;MACA,IAAI,IAAI,CAACH,MAAK,KAAM,EAAE,EAAC;QACnB,IAAI,CAACE,QAAO,GAAI,KAAI;QACpB,IAAI,CAACU,OAAO,CAACC,IAAI,CACb;UACIC,EAAE,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACV,OAAO,CAAC,CAAC;UACxBW,IAAI,EAAE,IAAI,CAAChB,MAAM;UACjBiB,IAAI,EAAE,IAAI,CAACd;QACf,CACJ;QACA,IAAI,CAACe,eAAe,CAAC;QACrB,IAAI,CAAClB,MAAK,GAAI,EAAC;QACf,IAAI,CAACC,MAAK,GAAI,IAAG;MACrB,CAAC,MAAK;QACFkB,KAAK,CAAC,+BAA+B;MACzC;IACJ,CAAC;IACDC,MAAMA,CAAA,EAAG;MACL,IAAI,CAACrB,QAAO,GAAI,EAAC;MACjBK,YAAY,CAACiB,UAAU,CAAE,YAAW,IAAI,CAAClB,QAAS,EAAC,EAAEmB,IAAI,CAACC,SAAS,CAAC,IAAI,CAACX,OAAO,CAAC;MACjF,IAAI,CAACV,QAAO,GAAI,IAAG;IACvB,CAAC;IACDgB,eAAeA,CAAA,EAAG;MACd,MAAMM,OAAM,GAAI,IAAI,CAACzB,QAAO;MAC5B0B,OAAO,CAACC,GAAG,CAACF,OAAO;MACnBpB,YAAY,CAACG,OAAO,CAAE,YAAW,IAAI,CAACJ,QAAS,EAAC,EAAEmB,IAAI,CAACC,SAAS,CAAC,IAAI,CAACC,OAAO,CAAC;IAClF,CAAC;IACDG,eAAeA,CAAA,EAAG;MACd,MAAMH,OAAM,GAAIF,IAAI,CAACM,KAAK,CAACxB,YAAY,CAACC,OAAO,CAAE,YAAW,IAAI,CAACF,QAAS,EAAC,CAAC;MAC5E,IAAIqB,OAAO,EAAC;QACR,IAAI,CAACzB,QAAO,GAAIyB,OAAM;QACtB,IAAI,CAACtB,QAAO,GAAI,KAAI;MACxB;IACJ;EACJ,CAAC;EACD2B,OAAOA,CAAA,EAAG;IACN,IAAI,CAACF,eAAe,CAAC;EACzB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}