{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, vShow as _vShow, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"wrapperChat\"\n};\nconst _hoisted_2 = {\n  class: \"containerChat\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Чат\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return $data.username ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, message => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.id\n    }, _toDisplayString(message.user) + \": \" + _toDisplayString(message.text), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), $data.emptyMsg ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"Нет сообщений\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newMsg = $event),\n    placeholder: \"Введите Ваше сообщение\",\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.sendMsg && $options.sendMsg(...args), [\"enter\"]))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.newMsg]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.sendMsg && $options.sendMsg(...args))\n  }, \"Отправить\"), _withDirectives(_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.delMsg && $options.delMsg(...args))\n  }, \"Удалить переписку\", 512 /* NEED_PATCH */), [[_vShow, $data.delBtn]])])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createTextVNode(\" Для регистрации перейдите по \"), _createVNode(_component_router_link, {\n    to: {\n      name: 'home'\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"ссылке\")]),\n    _: 1 /* STABLE */\n  })]));\n}","map":{"version":3,"names":["class","_createElementVNode","$data","username","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","messages","message","key","id","user","_toDisplayString","text","emptyMsg","_hoisted_4","newMsg","$event","placeholder","onKeyup","_cache","_withKeys","args","$options","sendMsg","onClick","delMsg","delBtn","_hoisted_5","_createVNode","_component_router_link","to","name"],"sources":["/Users/vladmelnikov/vscodeProjects/Синергия/6 урок/На вебинаре 1/project/src/components/ChatView.vue"],"sourcesContent":["<template>\n    <div v-if='username' class='wrapperChat'>\n        <div class='containerChat'>\n            <h2>Чат</h2>\n            <div v-for='message in messages' :key='message.id'>\n                {{ message.user }}: {{ message.text }}\n            </div>\n            <div v-if='emptyMsg'>Нет сообщений</div>\n        </div>\n        <div>\n            <input v-model='newMsg' placeholder='Введите Ваше сообщение' v-on:keyup.enter='sendMsg'>\n            <button v-on:click='sendMsg'>Отправить</button>\n            <button v-show='delBtn' v-on:click='delMsg'>Удалить переписку</button>\n        </div>\n    </div>\n    <div v-else>\n        Для регистрации перейдите по <router-link :to=\"{name: 'home'}\">ссылке</router-link>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'ChatView',\n    data() {\n        return {\n            messages: [],\n            newMsg: '',\n            delBtn: false,\n            emptyMsg: true,\n            username: localStorage.getItem('username')\n        }\n    },\n    computed() {\n        localStorage.setItem('username', this.$route.query.username)\n    },\n    methods: {\n        sendMsg() {\n            if (!this.user){\n                this.user = 'Аноним'\n            }\n            if (this.newMsg !== ''){\n                this.emptyMsg = false\n                this.messages.push(\n                    {\n                        id: new Date().getTime(),\n                        text: this.newMsg,\n                        user: this.username\n                    }\n                )\n                this.saveChatRecords()\n                this.newMsg = ''\n                this.delBtn = true\n            }else {\n                alert('Пожалуйста, введите сообщение')\n            }\n        },\n        delMsg() {\n            this.messages = []\n            localStorage.removeItem(`messages_${this.user}`, JSON.stringify(this.message))\n            this.emptyMsg = true\n            this.delBtn = false\n        },\n        saveChatRecords() {\n            const records = this.messages\n            console.log(records)\n            localStorage.setItem(`messages_${this.user}`, JSON.stringify(records))\n        },\n        loadChatRecords() {\n            const records = JSON.parse(localStorage.getItem(`messages_${this.user}`))\n            if (records){\n                this.messages = records\n                this.emptyMsg = false\n            }\n        }\n    },\n    created() {\n        this.loadChatRecords()\n    }\n}\n</script>\n\n<style>\n.containerChat{\n    width: 40vw;\n    height: 60vh;\n    border: 8px solid rgb(225, 175, 115);\n    color: black;\n    font-weight: 20px;\n    margin: 5vh auto;\n}\n\n/* .wrapperChat{\n    width: 100vw;\n    height: 100vh;\n} */\n</style>"],"mappings":";;;EACyBA,KAAK,EAAC;;;EAClBA,KAAK,EAAC;AAAe;gCACtBC,mBAAA,CAAY,YAAR,KAAG;;;;;;;;;SAFJC,KAAA,CAAAC,QAAQ,I,cAAnBC,mBAAA,CAaM,OAbNC,UAaM,GAZFJ,mBAAA,CAMM,OANNK,UAMM,GALFC,UAAY,G,kBACZH,mBAAA,CAEMI,SAAA,QAAAC,WAAA,CAFiBP,KAAA,CAAAQ,QAAQ,EAAnBC,OAAO;yBAAnBP,mBAAA,CAEM;MAF4BQ,GAAG,EAAED,OAAO,CAACE;wBACxCF,OAAO,CAACG,IAAI,IAAG,IAAE,GAAAC,gBAAA,CAAGJ,OAAO,CAACK,IAAI;kCAE5Bd,KAAA,CAAAe,QAAQ,I,cAAnBb,mBAAA,CAAwC,OAAAc,UAAA,EAAnB,eAAa,K,qCAEtCjB,mBAAA,CAIM,c,gBAHFA,mBAAA,CAAwF;+DAAxEC,KAAA,CAAAiB,MAAM,GAAAC,MAAA;IAAEC,WAAW,EAAC,wBAAwB;IAAMC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,SAAA,KAAAC,IAAA,KAAQC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;iEAAtEvB,KAAA,CAAAiB,MAAM,E,GACtBlB,mBAAA,CAA+C;IAAlC2B,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;KAAE,WAAS,G,gBACtCxB,mBAAA,CAAsE;IAAzC2B,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAG,MAAA,IAAAH,QAAA,CAAAG,MAAA,IAAAJ,IAAA,CAAM;KAAE,mBAAiB,0B,SAA7CvB,KAAA,CAAA4B,MAAM,E,wBAG9B1B,mBAAA,CAEM,OAAA2B,UAAA,G,iBAFM,gCACqB,GAAAC,YAAA,CAAsDC,sBAAA;IAAxCC,EAAE,EAAE;MAAAC,IAAA;IAAA;EAAc;sBAAE,MAAM,C,iBAAN,QAAM,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}